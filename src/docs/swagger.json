{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v2/auth/identity/users/login": {
            "post": {
                "description": "LoginByEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Identity"
                ],
                "summary": "LoginByEmail",
                "parameters": [
                    {
                        "description": "LoginByUsernameRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.LoginByUsernameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/identity/users/register": {
            "post": {
                "description": "RegisterByEmail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Identity"
                ],
                "summary": "RegisterByEmail",
                "parameters": [
                    {
                        "description": "RegisterUserByUsernameRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.RegisterUserByUsernameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/public/health/": {
            "get": {
                "description": "Health Check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/public/time/": {
            "get": {
                "description": "Auth Server Current Unix Timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get Server Current Unix Timestamp",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/public/version/": {
            "get": {
                "description": "Auth Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Get Auth Version",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/documents/": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Document",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Create a Document",
                "parameters": [
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "docCategory",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Create a file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Document response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.DocumentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/documents/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Document",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Get a Document",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.DocumentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/labels": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Label",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Create a Label",
                "parameters": [
                    {
                        "description": "Create a Label",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.CreateLabelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Label response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LabelResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/labels/": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Retrieve all labels associated with the current user.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "List all Labels for the current user",
                "responses": {
                    "200": {
                        "description": "List of Labels",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user-service_api_dto.LabelResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not found: No labels found",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/labels/{key}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Retrieve a Label by its Key. This operation is allowed for labels with Scope: public or private.",
                "tags": [
                    "Labels"
                ],
                "summary": "Get a Label by Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Label response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LabelResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden: Label not found or scope is not accessible",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "404": {
                        "description": "Not found: Label not found or already deleted",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Label. This operation is allowed only for labels with Scope: public.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Update a Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a Label",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.UpdateLabelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Label response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LabelResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden: Label scope is not public",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a Label. This operation is allowed only for labels with Scope: public.",
                "tags": [
                    "Labels"
                ],
                "summary": "Delete a Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Label deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden: Label scope is not public",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    },
                    "404": {
                        "description": "Not found: Label not found or already deleted",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/locations/": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get a Location",
                "responses": {
                    "200": {
                        "description": "Location response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LocationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a Location",
                "parameters": [
                    {
                        "description": "Update a Location",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.UpdateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Location response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LocationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a Location",
                "parameters": [
                    {
                        "description": "Create a Location",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.CreateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Location response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.LocationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/phones/": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Phone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Phones"
                ],
                "summary": "Update a Phone",
                "parameters": [
                    {
                        "description": "Update a Phone",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.UpdatePhoneRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Phone response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.PhoneResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Phone",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Phones"
                ],
                "summary": "Create a Phone",
                "parameters": [
                    {
                        "description": "Create a Phone",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.CreatePhoneRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Phone response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.PhoneResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/profiles/": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Update a Profile",
                "parameters": [
                    {
                        "description": "Update a Profile",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Profile response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Create a Profile",
                "parameters": [
                    {
                        "description": "Create a Profile",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user-service_api_dto.CreateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Profile response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/auth/resource/profiles/me": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Profile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a Profile",
                "responses": {
                    "200": {
                        "description": "Profile response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/user-service_api_dto.ProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/user-service_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user-service_api_dto.CreateLabelRequest": {
            "type": "object",
            "required": [
                "description",
                "key",
                "value"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "scope": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "user-service_api_dto.CreateLocationRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "city": {
                    "type": "string",
                    "maxLength": 50
                },
                "country": {
                    "type": "string",
                    "maxLength": 50
                },
                "metadata": {
                    "type": "string",
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "maxLength": 10
                },
                "staticPhoneNumber": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "user-service_api_dto.CreatePhoneRequest": {
            "type": "object",
            "required": [
                "mobileNumber"
            ],
            "properties": {
                "country": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 3
                },
                "mobileNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11
                }
            }
        },
        "user-service_api_dto.CreateProfileRequest": {
            "type": "object",
            "required": [
                "dob",
                "firstName",
                "lastName",
                "nid"
            ],
            "properties": {
                "dob": {
                    "type": "string",
                    "maxLength": 255
                },
                "fatherName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "metadata": {
                    "type": "string",
                    "maxLength": 255
                },
                "nid": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 3
                }
            }
        },
        "user-service_api_dto.DocumentResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "docCategory": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mimeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user-service_api_dto.LabelResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "user-service_api_dto.LocationResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "staticPhoneNumber": {
                    "type": "string"
                },
                "verification": {
                    "type": "string"
                }
            }
        },
        "user-service_api_dto.LoginByUsernameRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "user-service_api_dto.PhoneResponse": {
            "type": "object",
            "properties": {
                "mobileNumber": {
                    "type": "string"
                }
            }
        },
        "user-service_api_dto.ProfileResponse": {
            "type": "object",
            "properties": {
                "dob": {
                    "type": "string"
                },
                "fatherName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "nid": {
                    "type": "string"
                },
                "verification": {
                    "type": "string"
                }
            }
        },
        "user-service_api_dto.RegisterUserByUsernameRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "user-service_api_dto.UpdateLabelRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "user-service_api_dto.UpdateLocationRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "city": {
                    "type": "string",
                    "maxLength": 50
                },
                "country": {
                    "type": "string",
                    "maxLength": 50
                },
                "metadata": {
                    "type": "string",
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "maxLength": 10
                },
                "staticPhoneNumber": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "user-service_api_dto.UpdatePhoneRequest": {
            "type": "object",
            "required": [
                "mobileNumber"
            ],
            "properties": {
                "country": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 3
                },
                "mobileNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11
                }
            }
        },
        "user-service_api_dto.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "dob": {
                    "type": "string",
                    "maxLength": 255
                },
                "fatherName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "metadata": {
                    "type": "string",
                    "maxLength": 255
                },
                "nid": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 3
                }
            }
        },
        "user-service_api_helper.BaseHttpResponse": {
            "type": "object",
            "properties": {
                "error": {},
                "result": {},
                "resultCode": {
                    "$ref": "#/definitions/user-service_api_helper.ResultCode"
                },
                "success": {
                    "type": "boolean"
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user-service_api_validation.ValidationError"
                    }
                }
            }
        },
        "user-service_api_helper.ResultCode": {
            "type": "integer",
            "enum": [
                0,
                40001,
                40101,
                40301,
                40401,
                42901,
                42902,
                50001,
                50002
            ],
            "x-enum-varnames": [
                "Success",
                "ValidationError",
                "AuthError",
                "ForbiddenError",
                "NotFoundError",
                "LimiterError",
                "OtpLimiterError",
                "CustomRecovery",
                "InternalError"
            ]
        },
        "user-service_api_validation.ValidationError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthBearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}